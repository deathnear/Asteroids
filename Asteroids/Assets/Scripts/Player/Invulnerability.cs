using System.Collections;
using Extensions;
using GameSession;
using UnityEngine;

[RequireComponent(typeof(SpriteRenderer), typeof(BoxCollider2D))]
public class Invulnerability : MonoBehaviour
{
    public bool IsActivated { get; private set; }
    
    [SerializeField] private int _durationInSecond;

    private BoxCollider2D _boxCollider2D;
    private int _frequency = 2;
    private SpriteRenderer _spriteRenderer;
    private bool _isPaused => PauseManager.GetInstance().IsPaused;

    private void Awake()
    {
        _spriteRenderer = GetComponent<SpriteRenderer>();
        _boxCollider2D = GetComponent<BoxCollider2D>();
    }

    public void Activate()
    {
        StartCoroutine(MaintainInvulnerabilityFor(_durationInSecond));
    }
    
    private IEnumerator MaintainInvulnerabilityFor(int second)
    {
        float time = 0f;
        
        _boxCollider2D.enabled = false;
        
        while (time <= second)
        {
            if (!_isPaused)
            {
                _spriteRenderer.color = _spriteRenderer.BlinkAlpha(_frequency, time);

                time += Time.deltaTime;
            }

            yield return null;
        }

        _boxCollider2D.enabled = true;
    }
}